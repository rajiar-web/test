{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"E:\\\\git\\\\next-js-app-master\\\\next-js-app-master\\\\pages\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"jsx-2357524483\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Batman TV Shows\"), React.createElement(\"ul\", {\n    className: \"jsx-2357524483\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return React.createElement(\"li\", {\n      key: show.id,\n      className: \"jsx-2357524483\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/post?id=\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"jsx-2357524483\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, show.name)));\n  })), React.createElement(_JSXStyle, {\n    id: \"2357524483\",\n    __self: this\n  }, \"h1.jsx-2357524483,a.jsx-2357524483{font-family:\\\"Arial\\\";color:'red';}ul.jsx-2357524483{padding:0;}li.jsx-2357524483{list-style:none;margin:5px 0;}a.jsx-2357524483{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-2357524483:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkU6XFxnaXRcXG5leHQtanMtYXBwLW1hc3RlclxcbmV4dC1qcy1hcHAtbWFzdGVyXFxwYWdlc1xcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0JjLEFBR3dCLEFBS1YsQUFJTSxBQUtLLEFBS1QsVUFiYixFQWNBLElBVmMsSUFSZixTQVNDLEdBVEEsa0JBYVksV0FDWiIsImZpbGUiOiJFOlxcZ2l0XFxuZXh0LWpzLWFwcC1tYXN0ZXJcXG5leHQtanMtYXBwLW1hc3RlclxccGFnZXNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dC5qcydcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnXG5cbmNvbnN0IEluZGV4ID0gKHByb3BzKSA9PiAoXG5cdDxMYXlvdXQ+XG5cdFx0PGgxPkJhdG1hbiBUViBTaG93czwvaDE+XG5cdFx0PHVsPlxuXHRcdFx0e3Byb3BzLnNob3dzLm1hcChzaG93ID0+IChcblx0XHRcdFx0PGxpIGtleT17c2hvdy5pZH0+XG5cdFx0XHRcdFx0PExpbmsgYXM9e2AvcC8ke3Nob3cuaWR9YH0gaHJlZj17YC9wb3N0P2lkPSR7c2hvdy5pZH1gfT5cblx0XHRcdFx0XHRcdDxhPntzaG93Lm5hbWV9PC9hPlxuXHRcdFx0XHRcdDwvTGluaz5cblx0XHRcdFx0PC9saT5cblx0XHRcdCkpfVxuXHRcdDwvdWw+XG5cdFx0PHN0eWxlIGpzeD57YFxuXHRcdFx0aDEsIGEge1xuXHRcdFx0Zm9udC1mYW1pbHk6IFwiQXJpYWxcIjtcblx0XHRcdGNvbG9yOiAncmVkJ1xuXHRcdH1cblxuXHRcdFx0dWwge1xuXHRcdFx0cGFkZGluZzogMDtcblx0XHR9XG5cblx0XHRcdGxpIHtcblx0XHRcdGxpc3Qtc3R5bGU6IG5vbmU7XG5cdFx0XHRtYXJnaW46IDVweCAwO1xuXHRcdH1cblxuXHRcdFx0YSB7XG5cdFx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdFx0XHRjb2xvcjogYmx1ZTtcblx0XHR9XG5cblx0XHRcdGE6aG92ZXIge1xuXHRcdFx0b3BhY2l0eTogMC42O1xuXHRcdH1cblx0XHRgfVxuXHRcdDwvc3R5bGU+XG5cdDwvTGF5b3V0PlxuKTtcblxuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XG5cdGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS50dm1hemUuY29tL3NlYXJjaC9zaG93cz9xPWJhdG1hbicpO1xuXHRjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuXHRjb25zb2xlLmxvZyhgU2hvdyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xuXG5cdHJldHVybiB7XG5cdFx0c2hvd3M6IGRhdGEubWFwKGVudHJ5ID0+IGVudHJ5LnNob3cpXG5cdH1cbn07XG5cblxuXG5leHBvcnQgZGVmYXVsdCBJbmRleFxuIl19 */\\n/*@ sourceURL=E:\\\\git\\\\next-js-app-master\\\\next-js-app-master\\\\pages\\\\index.js */\"));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["E:\\git\\next-js-app-master\\next-js-app-master\\pages\\index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACb,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADD,CADD,CADoB;AAAA,GAApB,CADF,CAFD;AAAA;AAAA;AAAA,usEADa;AAAA,CAAd;;AAwCAN,KAAK,CAACO,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACLR,KAAK,CAAC,8CAAD,CADA;;AAAA;AACjBS,UAAAA,GADiB;AAAA;AAAA,iBAEJA,GAAG,CAACC,IAAJ,EAFI;;AAAA;AAEjBC,UAAAA,IAFiB;AAIvBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJuB,2CAMhB;AACNX,YAAAA,KAAK,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAW,KAAK;AAAA,qBAAIA,KAAK,CAACV,IAAV;AAAA,aAAd;AADD,WANgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAaA,eAAeJ,KAAf","sourcesContent":["import Layout from '../components/Layout.js'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\n\nconst Index = (props) => (\n\t<Layout>\n\t\t<h1>Batman TV Shows</h1>\n\t\t<ul>\n\t\t\t{props.shows.map(show => (\n\t\t\t\t<li key={show.id}>\n\t\t\t\t\t<Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n\t\t\t\t\t\t<a>{show.name}</a>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t\t<style jsx>{`\n\t\t\th1, a {\n\t\t\tfont-family: \"Arial\";\n\t\t\tcolor: 'red'\n\t\t}\n\n\t\t\tul {\n\t\t\tpadding: 0;\n\t\t}\n\n\t\t\tli {\n\t\t\tlist-style: none;\n\t\t\tmargin: 5px 0;\n\t\t}\n\n\t\t\ta {\n\t\t\ttext-decoration: none;\n\t\t\tcolor: blue;\n\t\t}\n\n\t\t\ta:hover {\n\t\t\topacity: 0.6;\n\t\t}\n\t\t`}\n\t\t</style>\n\t</Layout>\n);\n\nIndex.getInitialProps = async function() {\n\tconst res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n\tconst data = await res.json();\n\n\tconsole.log(`Show data fetched. Count: ${data.length}`);\n\n\treturn {\n\t\tshows: data.map(entry => entry.show)\n\t}\n};\n\n\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}